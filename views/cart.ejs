<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Shopping Cart</title>
  <link rel="stylesheet" href="/petshop.css">
  <link href="https://fonts.googleapis.com/css2?family=Assistant:wght@200;400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="styles.css">
  <style>
    body {
      font-family: 'Arial', sans-serif;
      background-color: #f7f7f7;
      margin: 0;
      padding: 0;
    }

    .cart-container {
      width: 90%;
      max-width: 600px;
      margin: 20px auto;
      padding: 20px;
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    h1 {
      text-align: center;
      color: #333;
    }

    .cart-item {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 20px;
      padding-bottom: 15px;
      border-bottom: 1px solid #eee;
      margin-top: 2em;
    }

    .cart-item h2 {
      margin: 0;
      font-size: 20px;
      width: 150px; /* Set a fixed width for the item name */
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap; /* Prevent the text from wrapping */
    }

    .cart-item p {
      margin: 5px 0;
      color: #666;
    }

    .quantity-control {
      display: flex;
      align-items: center;
    }

    .quantity-control button {
      background-color: #5cb85c;
      color: white;
      border: none;
      padding: 5px 10px;
      cursor: pointer;
      font-size: 16px;
      border-radius: 5px;
    }

    .quantity-control button:hover {
      background-color: #4cae4c;
    }

    .quantity-control span {
      margin: 0 10px;
      font-size: 18px;
      font-weight: bold;
    }

    .remove {
      background-color: #d9534f;
      color: white;
      border: none;
      padding: 5px 10px;
      cursor: pointer;
      font-size: 16px;
      border-radius: 5px;
    }

    .remove:hover {
      background-color: #c9302c;
    }

    #total-price {
      font-size: 24px;
      text-align: right;
      color: #333;
      margin-top: 20px;
      font-weight: bold;
    }

    #order-button {
      display: block;
      width: 100%;
      background-color: #007bff;
      color: white;
      border: none;
      padding: 15px;
      font-size: 18px;
      cursor: pointer;
      border-radius: 5px;
      text-align: center;
      margin-top: 20px;
    }

    #order-button:hover {
      background-color: #0056b3;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.4);
    }

    .modal-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 500px;
    }

    #confirm-order, #cancel-order {
      margin-top: 20px;
      padding: 10px 20px;
      cursor: pointer;
    }

    #confirm-order {
      background-color: #4CAF50;
      color: white;
      border: none;
    }

    #cancel-order {
      background-color: #f44336;
      color: white;
      border: none;
      margin-left: 10px;
    }
  </style>
</head>
<body>
  <!-- Pet Shop Navbar -->
  <section id="header">
    <div>
        <ul id="navbar">
            <li><a href="/cart"><img src="/images/bag.png" width="20px"></a></li>
            <li><a href="contant.html">אזור אישי</a></li>
            <li><a href="reptiles.html">זוחלים</a></li>
            <li><a href="fish.html">דגים</a></li>
            <li><a href="birds.html">ציפורים</a></li>
            <li><a href="rodents.html">מכרסמים</a></li>
            <li><a href="/dogs" class="active">כלבים</a></li>
            <li><a href="cats.html">חתולים</a></li>
            <li><a href="/">בית</a></li>
        </ul>
        </div>
        <div class="search-bar">
            <input type="text" placeholder="...חיפוש">
            <button type="submit">🔍</button>
          </div>
          <a href="#"><img src="images/petlogo2.png" class="logo" alt="" width="75px"></a>
  </section>

  <div class="cart-container">
    <h1>Your Shopping Cart</h1>
    <div id="cart-items">
      </div>
    <div id="total-price">Total: $0.00</div> 
    <button id="order-button">Place Order</button>
  </div>
  <!-- Add this modal HTML -->
  <div id="order-modal" class="modal">
    <div class="modal-content">
      <h2>Confirm Order</h2>
      <p id="order-summary"></p>
      <button id="confirm-order">Yes, Place Order</button>
      <button id="cancel-order">Cancel</button>
    </div>
  </div>

  <script>
    let cartItems = [];

    async function fetchCartItems() {
      try {
        const response = await fetch('/cart/get-cart-items');
        if (!response.ok) {
          throw new Error('Failed to fetch cart items');
        }
        cartItems = await response.json();
        renderCart(cartItems);
      } catch (error) {
        console.error('Error fetching cart items:', error);
      }
    }

    fetchCartItems();

    // Your JavaScript logic here
    function renderCart(items) {
      const cartItemsContainer = document.getElementById("cart-items");
      cartItemsContainer.innerHTML = ""; // Clear existing items
      let totalPrice = 0;
      for (const item of items) {
        const cartItem = document.createElement('div');
        cartItem.classList.add('cart-item');
        const itemName = document.createElement('h2');
        itemName.textContent = item.name;
        cartItem.appendChild(itemName);
        const itemPrice = document.createElement('p');
        itemPrice.textContent = `Price: $${item.price.toFixed(2)}`;
        cartItem.appendChild(itemPrice);
        const quantityControl = document.createElement('div');
        quantityControl.classList.add('quantity-control');
        const decreaseBtn = document.createElement('button');
        decreaseBtn.classList.add('decrease');
        decreaseBtn.dataset.id = item.productId; 
        decreaseBtn.textContent = '-';
        quantityControl.appendChild(decreaseBtn);
        const quantitySpan = document.createElement('span');
        quantitySpan.classList.add('quantity');
        quantitySpan.textContent = item.quantity;
        quantityControl.appendChild(quantitySpan);
        const increaseBtn = document.createElement('button');
        increaseBtn.classList.add('increase');
        increaseBtn.dataset.id = item.productId; 
        increaseBtn.textContent = '+';
        quantityControl.appendChild(increaseBtn);
        cartItem.appendChild(quantityControl);
        const removeBtn = document.createElement('button');
        removeBtn.classList.add('remove');
        removeBtn.dataset.id = item.productId;
        removeBtn.innerHTML = '<i class="fas fa-trash"></i> Remove';
        cartItem.appendChild(removeBtn);
        cartItemsContainer.appendChild(cartItem);
        totalPrice += parseFloat(item.price) * item.quantity;
      }
      document.getElementById("total-price").textContent = `Total: $${totalPrice.toFixed(2)}`;
    }
    function updateQuantity(itemId, change) {
      // Logic to update quantity
      // You'll need to make an API call to update quantity
      renderCart(); // Update cart display after API call
    }
    function removeItem(itemId) {
      // Logic to remove item
      // You'll need to make an API call to remove item
      renderCart(); // Update cart display after API call
    }
    document.getElementById("order-button").addEventListener("click", () => {
      const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);
      const totalPrice = cartItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);
      
      document.getElementById("order-summary").textContent = 
        `Are you sure you want to order ${totalItems} item(s) for $${totalPrice.toFixed(2)}?`;
      
      document.getElementById("order-modal").style.display = "block";
    });

    document.getElementById("confirm-order").addEventListener("click", () => {
      fetch('/order/create', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.orderId) {
          alert(`Order placed successfully! Your order ID is: ${data.orderId}`);
          // Clear the cart display
          document.getElementById("cart-items").innerHTML = "";
          document.getElementById("total-price").textContent = "Total: $0.00";
        } else {
          alert('Error placing order: ' + data.message);
        }
        document.getElementById("order-modal").style.display = "none";
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Error placing order. Please try again.');
        document.getElementById("order-modal").style.display = "none";
      });
    });

    document.getElementById("cancel-order").addEventListener("click", () => {
      document.getElementById("order-modal").style.display = "none";
    });
    // Additional logic for adding items to the cart (you'll need to create a button/link for this)
    // ...
    // Logic for updating quantities using AJAX/fetch 
    // ...
    // Logic for removing items using AJAX/fetch 
    // ...
  </script>
</body>
</html>
